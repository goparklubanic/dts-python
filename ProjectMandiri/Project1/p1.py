#!/bin/python3
# -*- coding: utf-8 -*-
"""Project 1 - list and dictionary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14fxT33ZIxwg_ZlTa7HYdealuAV01Xqlw

# Project 1 - Working with list and dictionary 
## (DEADLINE: 06.00 WIB 8 JUNI 2020)
Pada project ini peserta pelatihan python akan membuat code-code untuk mengolah `list` dan `dictionary` 

Project items yang dibutuhkan:
- Pemahaman dan pembuatan `fungsi`, `variabel`, dan `tipe data`
- pemahaman `list` dan `dictionary`
- logika dasar pemrograman

**Note: Tidak diperkenankan untuk menggunakan library/module lain, kecuali disediakan atau didefinisikan**

>>**BOLEH BERDISKUSI TANPA MEMBERIKAN JAWABAN!!!**

### 1. Buatlah fungsi `letter_catalog` dengan sebuah positional argument berupa list dan keyword argument `letter` untuk nilai default 'A'. Fungsi `letter_catalog` akan mengembalikan sebuah list yang berisi nama-nama buah yang dimulai dengan huruf yang ada keyword argument `letter`. Jika tidak ada item di list inputan tersebut yang diawali dengan huruf yang didefinisikan di keyword `letter` maka fungsi mengembalikan list kosong.
"""

#Graded

def letter_catalog(items,letter='A'):
    pass
  # MULAI KODEMU DI SINI
    output=[]
    for i in range( len(items) ):
        item = items[i]
        if item[0] == letter:
            output.append(item)
    print(output)


# Cek output kode anda
bunga = ['Anggrek','Anyelir','Bougenvile','Cempaka','Asoka','Camelia','Bouvardia','Deposito']
negara = ['Amerika','Brazil','Chile','Belgia','Canada','Argentina','Cameroon','Afganistan','Bangladesh']

letter_catalog(['Apple','Avocado','Banana','Blackberries','Blueberries','Cherries'],letter='A')
letter_catalog(bunga,'A')
letter_catalog(negara,'B')

"""Expected output:
```
['Apple', 'Avocado']
```

### 2. Buatlah list `counter_item` yang memiliki sebuah input argument berupa list. Fungsi ini mengembalikan sebuah dictionary yang menghitung jumlah buah dalam list input, dengan `key` berupa nama buah tersebut dan `value` berupa jumlah nama buah tersebut muncul di list input.
"""

#Graded

def counter_item(items):
  pass
  # MULAI KODEMU DI SINI
  biting = dict()
  for item in items:
      if item in biting:
          biting[item]+=1
      else:
          biting[item]=1
  
  return biting
        

# Cek output kode anda
print(counter_item(['Apple','Apple','Apple','Blueberries','Blueberries','Blueberries']))
items = ['Merah','Kuning','Merah','Hijau','Kuning','Merah','Hijau','Kuning','Hijau']
warna = counter_item(items)
print(warna)

pilkades = ['Calon 1','Calon 1','Calon 2','Calon 3','Calon 2','Calon 2','Calon 3','Calon 1','Calon 2','Calon 3','Calon 2','Calon 1']
print(counter_item(pilkades))



"""Expected output:
```
{'Apple': 3, 'Blueberries': 3}
```

### 3. Di bawah ini sudah ada tiga variables `fruits`, `prices`, dan `chart`. 
- Buatlah sebuah dictionary yang berupa daftar harga buah dengan `key` berupa nama buah di variable `fruits` dan dengan `value` berupa harga dari buah tersebut di variable `price` (sudah diurutkan sesuai dengan nama-nama buah di varibale `fruits`, kemudian Dictionary tersebut disimpan di dalam variable `fruit_price`.
- Selanjutnya, Buatlah fungsi `total_price` dengan dua input yaitu: 1) dictionary yang merupakan keluaran dari fungsi `counter_item` dan 2) dictionary harga buah  `fruit_price`. Fungsi ini mengeluarkan sebuah total harga dari daftar buah di dictionary keluaran dari `counter_item`.

**Hint**: Gunakan fungsi `counter_item` di soal nomor 2.
"""

#Graded

# dua variable berikut jangan diubah
fruits = ['Apple','Avocado','Banana','Blackberries','Blueberries','Cherries','Date Fruit','Grapes','Guava','Jackfruit','Kiwifruit']
prices = [6,5,3,10,12,7,14,15,8,7,9]

# list buah
chart = ['Blueberries','Blueberries','Grapes','Apple','Apple','Apple','Blueberries','Guava','Jackfruit','Blueberries','Jackfruit']

# MULAI KODEMU DI SINI
fruit_price = dict()
for i in range(len(fruits)):
    fruit_price[fruits[i]] = prices[i]


# def counter_item(items):
#     pass
#     biting = dict()
#     for item in items:
#         if item in biting:
#             biting[item]+=1
#         else:
#             biting[item]=1
    
#     return biting

def total_price(dcounter,fprice):
    pass
    # MULAI KODEMU DI SINI
    tprice = 0
    for sfruit in dcounter:
        #print(sfruit,':',dcounter[sfruit],'*',fprice[sfruit])
        tprice += (dcounter[sfruit]*fprice[sfruit])
    
    return tprice

# Cek output kode anda
print(total_price(counter_item(chart),fruit_price))

"""Expected output:
```
103
```

### 4. Buatlah fungsi `discounted_price` dengan dua positional arguments input dari keluaran fungsi totalprice dan discount dalam persen(80 berarti 80%, dst), dan satu keyword argument `minprice` yang menunjukkan hanya dengan minimum price tersebut yang hanya di-discount, set default value `minprice` ke 100. Fungsi tersebut menghitung nilai harga akhir setelah di-discount sebesar discount variable (argument kedua). Untuk harga total yang kurang dari `minprice` maka keluarannya sama dengan harga total tersebut tanpa discount.
"""

#Graded

def discounted_price(total,discount,minprice=100):
  pass
  # MULAI KODEMU DI SINI
  if total >= minprice:
    return(100-discount) * total / 100

# Cek output kode anda
hargaDiskon=discounted_price(total_price(counter_item(chart),fruit_price),10,minprice=100)
print(hargaDiskon)

"""Expected output:
```
92.7
```

### 
# 5. Buatlah fungsi `print_summary` dengan 2 posisional argument input, list nama2 buah (cth: seperti variable `chart`) dan dictionary harga buah (cth: seperti variable `fruit_price`, yang mengeluarkan tulisan ringakasan dari pembelian buah seperti berikut ini.

cth keluaran:
```
3 Apple : 18
4 Blueberries : 48
1 Grapes : 15
1 Guava : 8
2 Jackfruit : 14
total : 103
discount price : 92.7
```
dengan format `jumlahbuah`\<spasi\>`namabuah`\<spasi\>`totalhargabuah\n` dengan nama nama buah berurutan sesuai abjad `ascending`, kemudian diikuti total harga semuanya dan discount price dengan besaran 10% dengan minimum harga pembelian 100.

**Note**: dipisahkan hanya satu spasi. Output harus sama dengan contoh diatas untuk pemanggilan fungsi berikut ini.
```
print_summary(chart,fruit_price)
```
"""

#Graded

def print_summary(items,fprice):
  pass
  # MULAI KODEMU DI SINI
  itemBelanja = sorted(counter_item(items).items())
  for i in itemBelanja:
    print(i[1],i[0],':',i[1] * fprice[i[0]])

  total = total_price(counter_item(items),fprice)
  print('total:',total)
  print('discount price:',discounted_price(total,10,minprice=100))

# Cek output kode anda
print_summary(chart,fruit_price)

"""Expected output:
```
3 Apple : 18
4 Blueberries : 48
1 Grapes : 15
1 Guava : 8
2 Jackfruit : 14
total : 103
discount price : 92.7
```

# Cara Submit
1. Tuliskan email akun netacad anda di variable email (tentunya dengan tanda kutip) 
2. Copy-paste **SEMUA** cell yang ada komentar `#Graded` ke cell code di bawah ini.
3. Simpan kode tersebut sebagai p1.py
4. Submit file ke google form berikut: https://forms.gle/6AQ8BYM8UoMK7kJg6
5. Pengisian form membutuhkan anda login ke akun google anda.
"""

# nama file p1.py 
# Isikan nama anda dan copy semua cell code yang dengan komentar #Graded
 
#netacad email cth: 'abcd@gmail.com'
email='nugroho.redbuff@gmail.com'
 
# copy-paste semua #Graded cells YANG SUDAH ANDA KERJAKAN di bawah ini